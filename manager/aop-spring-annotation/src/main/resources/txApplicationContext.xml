<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://mybatis.org/schema/mybatis-spring
        http://mybatis.org/schema/mybatis-spring.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
	    http://www.springframework.org/schema/aop/spring-aop.xsd
	    http://www.springframework.org/schema/tx
	    http://www.springframework.org/schema/tx/spring-tx.xsd">
    <context:component-scan base-package="com.my.servicetx"/>
    <context:property-placeholder location="classpath:db.properties"/>

    <!-- 数据库链接 -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!-- Druid数据库连接池 -->
<!--    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">-->
<!--        &lt;!&ndash; 数据源驱动类可不写，Druid默认会自动根据URL识别DriverClass &ndash;&gt;-->
<!--        <property name="driverClassName" value="${jdbc.driver}" />-->

<!--        &lt;!&ndash; 基本属性 url、user、password &ndash;&gt;-->
<!--        <property name="url" value="${jdbc.url}" />-->
<!--        <property name="username" value="${jdbc.username}" />-->
<!--        <property name="password" value="${jdbc.password}" />-->

<!--        &lt;!&ndash; 配置初始化大小、最小、最大 &ndash;&gt;-->
<!--        <property name="initialSize" value="0" />-->
<!--        <property name="minIdle" value="0" />-->
<!--        <property name="maxActive" value="10" />-->

<!--        &lt;!&ndash; 配置获取连接等待超时的时间 &ndash;&gt;-->
<!--        <property name="maxWait" value="60000" />-->

<!--        &lt;!&ndash; 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 &ndash;&gt;-->
<!--        <property name="timeBetweenEvictionRunsMillis" value="60000" />-->

<!--        &lt;!&ndash; 配置一个连接在池中最小生存的时间，单位是毫秒 &ndash;&gt;-->
<!--        <property name="minEvictableIdleTimeMillis" value="300000" />-->

<!--        <property name="testWhileIdle" value="true" />-->
<!--        <property name="testOnBorrow" value="false" />-->
<!--        <property name="testOnReturn" value="false" />-->

<!--        &lt;!&ndash; 打开PSCache，并且指定每个连接上PSCache的大小（Oracle使用） &ndash;&gt;-->
<!--        <property name="poolPreparedStatements" value="true" />-->
<!--        <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />-->

<!--        &lt;!&ndash; 配置监控统计拦截的filters &ndash;&gt;-->
<!--        <property name="filters" value="stat" />-->
<!--    </bean>-->

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <constructor-arg ref="dataSource"/>
    </bean>


    <!--注解 事务控制   -->
    <tx:annotation-driven transaction-manager="transactionManager" />
</beans>